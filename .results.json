{
  "stats": {
    "suites": 8,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 1,
    "start": "2018-02-15T20:46:16.928Z",
    "end": "2018-02-15T20:46:17.077Z",
    "duration": 149
  },
  "tests": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "QuoteForm Component renders without crashing",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a default state",
      "fullTitle": "QuoteForm Component has a default state",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a form tag",
      "fullTitle": "QuoteForm Component always renders a form tag",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a textarea[name=\"content\"] tag for quote content",
      "fullTitle": "QuoteForm Component always renders a textarea[name=\"content\"] tag for quote content",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a input[name=\"author\"] tag for quote author",
      "fullTitle": "QuoteForm Component always renders a input[name=\"author\"] tag for quote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should pass a new value to state using the handleOnChange function",
      "fullTitle": "QuoteForm Component should pass a new value to state using the handleOnChange function",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handleOnSubmit and preventDefault()",
      "fullTitle": "QuoteForm Component should handleOnSubmit and preventDefault()",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should reset state after form handleOnSubmit",
      "fullTitle": "QuoteForm Component should reset state after form handleOnSubmit",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should call addQuote prop on handleOnSubmit",
      "fullTitle": "QuoteForm Component should call addQuote prop on handleOnSubmit",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "\"before each\" hook for \"renders without crashing\"",
      "fullTitle": "App Component \"before each\" hook for \"renders without crashing\"",
      "duration": 31,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: quotes is not defined\n    at Quotes.render (src/containers/Quotes.js:19:17)\n    at node_modules/react-dom/lib/ReactCompositeComponent.js:793:21\n    at measureLifeCyclePerf (node_modules/react-dom/lib/ReactCompositeComponent.js:73:12)\n    at ReactCompositeComponentWrapper._renderValidatedComponentWithoutOwnerOrContext (node_modules/react-dom/lib/ReactCompositeComponent.js:792:25)\n    at ReactCompositeComponentWrapper._renderValidatedComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:819:32)\n    at ReactCompositeComponentWrapper.performInitialMount (node_modules/react-dom/lib/ReactCompositeComponent.js:359:30)\n    at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactDOMComponent.mountChildren (node_modules/react-dom/lib/ReactMultiChild.js:234:44)\n    at ReactDOMComponent._createInitialChildren (node_modules/react-dom/lib/ReactDOMComponent.js:701:32)\n    at ReactDOMComponent.mountComponent (node_modules/react-dom/lib/ReactDOMComponent.js:520:12)\n    at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at mountComponentIntoNode (node_modules/react-dom/lib/ReactMount.js:102:32)\n    at ReactReconcileTransaction.perform (node_modules/react-dom/lib/Transaction.js:141:20)\n    at batchedMountComponentIntoNode (node_modules/react-dom/lib/ReactMount.js:124:15)\n    at ReactDefaultBatchingStrategyTransaction.perform (node_modules/react-dom/lib/Transaction.js:141:20)\n    at Object.batchedUpdates (node_modules/react-dom/lib/ReactDefaultBatchingStrategy.js:60:26)\n    at Object.batchedUpdates (node_modules/react-dom/lib/ReactUpdates.js:95:27)\n    at Object._renderNewRootComponent (node_modules/react-dom/lib/ReactMount.js:317:18)\n    at Object._renderSubtreeIntoContainer (node_modules/react-dom/lib/ReactMount.js:399:32)\n    at Object.render (node_modules/react-dom/lib/ReactMount.js:420:23)\n    at Object.renderIntoDocument (node_modules/react-dom/lib/ReactTestUtils.js:89:21)\n    at renderWithOptions (node_modules/enzyme/build/react-compat.js:200:24)\n    at new ReactWrapper (node_modules/enzyme/build/ReactWrapper.js:94:59)\n    at mount (node_modules/enzyme/build/mount.js:19:10)\n    at Context.<anonymous> (test/components/AppComponentTest.js:15:15)",
        "message": "quotes is not defined"
      }
    }
  ],
  "passes": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "QuoteForm Component renders without crashing",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a default state",
      "fullTitle": "QuoteForm Component has a default state",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a form tag",
      "fullTitle": "QuoteForm Component always renders a form tag",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a textarea[name=\"content\"] tag for quote content",
      "fullTitle": "QuoteForm Component always renders a textarea[name=\"content\"] tag for quote content",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a input[name=\"author\"] tag for quote author",
      "fullTitle": "QuoteForm Component always renders a input[name=\"author\"] tag for quote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should pass a new value to state using the handleOnChange function",
      "fullTitle": "QuoteForm Component should pass a new value to state using the handleOnChange function",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handleOnSubmit and preventDefault()",
      "fullTitle": "QuoteForm Component should handleOnSubmit and preventDefault()",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should reset state after form handleOnSubmit",
      "fullTitle": "QuoteForm Component should reset state after form handleOnSubmit",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should call addQuote prop on handleOnSubmit",
      "fullTitle": "QuoteForm Component should call addQuote prop on handleOnSubmit",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}